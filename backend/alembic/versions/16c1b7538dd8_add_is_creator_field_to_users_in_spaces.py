"""Add is_creator field to users_in_spaces

Revision ID: 16c1b7538dd8
Revises: 9d3d70f8d8f5
Create Date: 2025-08-20 23:12:50.272713

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '16c1b7538dd8'
down_revision: Union[str, Sequence[str], None] = '9d3d70f8d8f5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_in_space0s',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('space_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'PARTICIPANT', 'VISITOR', name='userrole'), nullable=False),
    sa.Column('is_creator', sa.Boolean(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['space_id'], ['spaces.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'space_id', name='unique_user_space')
    )
    op.create_index(op.f('ix_users_in_space0s_id'), 'users_in_space0s', ['id'], unique=False)
    op.drop_index(op.f('ix_users_in_spaces_id'), table_name='users_in_spaces')
    op.drop_table('users_in_spaces')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_in_spaces',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('space_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('joined_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['space_id'], ['spaces.id'], name=op.f('users_in_spaces_space_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('users_in_spaces_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('users_in_spaces_pkey'))
    )
    op.create_index(op.f('ix_users_in_spaces_id'), 'users_in_spaces', ['id'], unique=False)
    op.drop_index(op.f('ix_users_in_space0s_id'), table_name='users_in_space0s')
    op.drop_table('users_in_space0s')
    # ### end Alembic commands ###
